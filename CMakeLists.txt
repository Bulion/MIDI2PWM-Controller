# Brief: Builds firmware source generated by STM32CubeMX.
#
# Author:  Dawid Åšliwa. | https://github.com/Bulion
# License: MIT License. Contributions welcome.

cmake_minimum_required (VERSION 3.6)

set(PROJ "MIDI2PWM")
project(${PROJ})
enable_language(ASM)

if(ARMGCC)
    set(LINKER_OPTION "-T")
    set(LINKER_SCRIPT_SUFFIX ".ld")
else()
    message(FATAL_ERROR "This project don't support provided toolchain!")
endif()

# All relative to project root, as generated by STM32CubeMX.
set(SOURCE_DIR        ${CMAKE_SOURCE_DIR}/Src)
set(CMSIS_DIR         ${CMAKE_SOURCE_DIR}/Drivers/CMSIS)
set(DEVICE_DIR        ${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Device/ST/STM32F7xx)
set(STARTUP_DIR       ${CMAKE_SOURCE_DIR}/Startup)
set(HAL_DIR           ${CMAKE_SOURCE_DIR}/Drivers/STM32F7xx_HAL_Driver)
set(STM32_USB_LIB_DIR ${CMAKE_SOURCE_DIR}/Middlewares/ST/STM32_USB_Device_Library)

# Look here for header files.
include_directories(${CMAKE_SOURCE_DIR}/Inc)
include_directories(${CMSIS_DIR}/Include)
include_directories(${DEVICE_DIR}/Include)
include_directories(${HAL_DIR}/Inc)
include_directories(${STM32_USB_LIB_DIR}/Class/CDC/Inc)
include_directories(${STM32_USB_LIB_DIR}/Core/Inc)

# Get all sources
AUX_SOURCE_DIRECTORY(${HAL_DIR}/Src HAL_SOURCES)

add_executable(${PROJ}
    ${SOURCE_DIR}/adc.c
    ${SOURCE_DIR}/dma.c
    ${SOURCE_DIR}/gpio.c
    ${SOURCE_DIR}/i2c.c
    ${SOURCE_DIR}/main.cpp
    ${SOURCE_DIR}/SoftPWMController.cpp
    ${SOURCE_DIR}/stm32f7xx_hal_msp.c
    ${SOURCE_DIR}/stm32f7xx_it.c
    ${SOURCE_DIR}/system_stm32f7xx.c
    ${SOURCE_DIR}/tim.c
    ${SOURCE_DIR}/usart.c
    ${SOURCE_DIR}/usb_device.c
    ${SOURCE_DIR}/usbd_cdc_if.c
    ${SOURCE_DIR}/usbd_conf.c
    ${SOURCE_DIR}/usbd_desc.c
    ${STM32_USB_LIB_DIR}/Class/CDC/Src/usbd_cdc.c
    ${STM32_USB_LIB_DIR}/Core/Src/usbd_core.c
    ${STM32_USB_LIB_DIR}/Core/Src/usbd_ctlreq.c
    ${STM32_USB_LIB_DIR}/Core/Src/usbd_ioreq.c
    ${STARTUP_DIR}/startup_stm32f750v8tx.s
    ${HAL_SOURCES}
)

set_target_properties(${PROJ} PROPERTIES SUFFIX ".elf")

target_compile_definitions(${PROJ} PUBLIC
    USE_HAL_DRIVER
    STM32F750xx
    USE_FULL_LL_DRIVER
)

target_compile_options(${PROJ} PUBLIC
    $<$<COMPILE_LANGUAGE:CXX>:
        -std=c++14
        -fno-rtti
    >
    -mcpu=cortex-m7
    -mthumb
    -mno-thumb-interwork
    -mfpu=fpv5-sp-d16
    -mfloat-abi=hard
    -mapcs
    -Wall
    -ffunction-sections
    -fdata-sections
    -fno-exceptions
    -fno-non-call-exceptions
)

set(LINKER_SCRIPT ${CMAKE_CURRENT_LIST_DIR}/STM32F750V8TX_FLASH${LINKER_SCRIPT_SUFFIX})

target_link_options(${PROJ} PUBLIC
    ${LINKER_OPTION} ${LINKER_SCRIPT}
    -specs=nano.specs
    -specs=nosys.specs
    -Wl,--gc-section
    -mcpu=cortex-m7
    -mfpu=fpv5-sp-d16
    -mfloat-abi=hard
    -mapcs
    -mthumb
    -flto
    -fno-rtti
    -fno-exceptions
)

if(CMAKE_HOST_WIN32)
    find_program(stm32programmer NAMES STM32_Programmer_CLI PATHS "C:/Program Files/STMicroelectronics/STM32Cube/STM32CubeProgrammer/bin/")
elseif (CMAKE_HOST_APPLE)
    find_program(stm32programmer NAMES STM32_Programmer.sh STM32_Programmer_CLI PATHS "/Applications/STMicroelectronics/STM32Cube/STM32CubeProgrammer/STM32CubeProgrammer.app/Contents/MacOs/bin")
else()
    find_program(stm32programmer NAMES STM32_Programmer.sh STM32_Programmer_CLI PATHS "/opt/STMicroelectronics/STM32Cube/STM32CubeProgrammer/bin")
endif()

# Flash firmware to target.
add_custom_target(flash
    ${stm32programmer} -c port=SWD reset=HWrst6 -w "$<TARGET_FILE:${PROJ}>" -g
    DEPENDS ${PROJ})
